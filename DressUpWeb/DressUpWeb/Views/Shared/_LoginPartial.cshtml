@using DressUp.Data.Models
@using Microsoft.AspNetCore.Identity
@using static DressUp.Common.GeneralApplicationConstants;

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IUserService UserService

@{
	string userName = await UserService.GetFullNameByEmailAsync(User.Identity?.Name!);
}


<ul class="navbar-nav">
	@if (SignInManager.IsSignedIn(User))
	{
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello, @userName</a>
		</li>
		@if (User.IsInRole(AdminRoleName))
		{
			<li class="nav-item dropdown">
				<a class="nav-link dropdown-toggle text-dark" data-bs-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">More Options</a>
				<div class="dropdown-menu">
					<a class="dropdown-item" asp-area="" asp-controller="Admin" asp-action="AddDeleteRole">Add new Role</a>
					<a class="dropdown-item" asp-area="" asp-controller="Admin" asp-action="AddUserToRolе">Add user to Role</a>
					<a class="dropdown-item" asp-area="" asp-controller="Admin" asp-action="DeleteUserFromRole">Remove role from user</a>
					<div class="dropdown-divider"></div>
					<a class="dropdown-item" asp-area="" asp-controller="Admin" asp-action="LeaveYourRole">Leave your role</a>
				</div>
			</li>
		}
		<li class="nav-item">
			<form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
				<button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
			</form>
		</li>
	}
	else
	{
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Register">Register</a>
		</li>
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Login">Login</a>
		</li>
	}
</ul>
